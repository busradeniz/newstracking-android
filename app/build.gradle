apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.busradeniz.nt"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        lintConfig rootProject.file('lint.xml')
        quiet false
        abortOnError true
        ignoreWarnings true
    }

    // Runs lint, checkstyle and findbugs from IDE on each build.
    afterEvaluate {
        applicationVariants.all {
            variant ->
                // variantName: e.g. Debug, Release
                def variantName = variant.name.capitalize()
                // now we tell gradle to always start lint after compile
                // e.g. start lintDebug after compileDebugSources
                project.tasks["compile${variantName}Sources"].doLast {
                    project.tasks["lint${variantName}"].execute()
                    project.tasks["checkstyle"].execute() // Defined in quality.gradle
                    project.tasks["findbugs"].execute() // Defined in quality.gradle
                }
        }
    }

}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support Libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.android.support:support-compat:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"

    // Guava
    implementation "com.google.guava:guava:$rootProject.guavaVersion"

    // Gson
    implementation group: 'com.google.code.gson', name: 'gson', version: "$rootProject.gsonVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Room
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    implementation "android.arch.persistence.room:rxjava2:$rootProject.roomVersion"

    // Test libraries
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    testImplementation "junit:junit:$rootProject.jUnitVersion"

}
configurations.all {
    resolutionStrategy.force "com.google.code.findbugs:jsr305:$rootProject.findbugsVersion"
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}